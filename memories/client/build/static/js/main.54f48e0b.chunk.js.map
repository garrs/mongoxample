{"version":3,"sources":["constants/actionTypes.js","reducers/index.js","reducers/posts.js","api/index.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","actions/posts.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","images/memories.jpg","styles.js","App.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","combineReducers","posts","action","type","map","post","_id","payload","filter","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","setCurrentId","classes","useStyles","dispatch","useDispatch","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","fontSize","tags","tag","gutterBottom","CardContent","component","message","CardActions","a","api","data","console","log","likeCount","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","useSelector","state","length","Grid","container","item","xs","sm","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","useState","postData","setPostData","find","p","useEffect","clear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","newPost","createPost","TextField","name","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","appBar","heading","marginLeft","breakpoints","down","App","get","Container","maxWidth","AppBar","align","src","memories","alt","Grow","in","justify","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54f48e0b.chunk.js","sourcesContent":["// This js file is very useful tool for debugging unfindable errors!\r\n// less error-prone and more scalable \r\n\r\nexport const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE'\r\nexport const DELETE = 'DELETE'\r\nexport const FETCH_ALL = 'FETCH_ALL'\r\n\r\n\r\n ","import {combineReducers} from 'redux'\r\n\r\nimport posts from './posts';\r\n\r\nexport default combineReducers ({\r\n    posts,\r\n});","import {FETCH_ALL, CREATE, UPDATE, DELETE} from '../constants/actionTypes'\r\n\r\nexport default (posts =[] , action) => {\r\n    switch (action.type) {\r\n        case UPDATE:\r\n        // case 'LIKE':\r\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post)\r\n        case FETCH_ALL:\r\n            return action.payload;\r\n        case CREATE:\r\n            return [...posts, action.payload];\r\n        case DELETE:\r\n            return posts.filter((post) => post._id !== action.payload)\r\n        default:\r\n            return posts;\r\n    }\r\n\r\n}","import axios from 'axios';\r\n\r\n// const url =\"http://localhost:5000/posts\";\r\nconst url =\"https://memories-project2.herokuapp.com/posts\"\r\n\r\nexport const fetchPosts = () => axios.get(url);\r\nexport const createPost = (newPost) => axios.post(url, newPost)\r\nexport const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost);\r\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\r\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`);","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n});","import React from 'react';\r\nimport {Card, CardActions, CardContent, CardMedia, Button, Typography} from '@material-ui/core'\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\r\nimport moment from 'moment'\r\nimport {useDispatch } from 'react-redux'\r\nimport useStyles from './styles'\r\n\r\nimport {deletePost, likePost} from '../../../actions/posts'\r\n\r\nconst Post = ({post, setCurrentId}) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    return ( \r\n        <Card className={classes.card}>\r\n            <CardMedia className={classes.media} image={post.selectedFile} title={post.title} />    \r\n            <div className={classes.overlay}>\r\n                <Typography variant=\"h6\">{post.creator}</Typography>\r\n                <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n            </div>\r\n            <div className={classes.overlay2}>\r\n                <Button style={{color: 'white'}} \r\n                size='small' \r\n                onClick={() => setCurrentId(post._id)}>\r\n                    <MoreHorizIcon fontSize=\"default\"/>\r\n                </Button>\r\n            </div>\r\n            <div className={classes.details}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n            </div>\r\n            <Typography className={classes.title} variant=\"h5\" gutterBottom>{post.title}</Typography>\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" >{post.message}</Typography>\r\n            </CardContent>\r\n            <CardActions className={classes.cardActions}>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => dispatch(likePost(post._id))}>\r\n                    <ThumbUpAltIcon fontSize=\"small\"/>\r\n                    Like &nbsp;\r\n                    {post.likeCount}\r\n                </Button>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}>\r\n                    <DeleteIcon fontSize=\"small\"/>\r\n                    Delete\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n     );\r\n}\r\n \r\nexport default Post;","import * as api from '../api';\r\nimport {FETCH_ALL, CREATE, UPDATE, DELETE} from '../constants/actionTypes'\r\n\r\n// Action creators.. functions that return actions\r\nexport const getPosts = () => async (dispatch) => {\r\n    try {\r\n        // below we are getting response from API\r\n        const { data } = await api.fetchPosts();\r\n        // good to have these action types set as constants by capitalizing them\r\n        dispatch({type:FETCH_ALL, payload:data})\r\n    } catch (error) {\r\n        console.log(error.message)\r\n    }\r\n    // const action = {type:'FETCH_ALL', payload:[]}\r\n    // return action \r\n    // dispatch(action)\r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.createPost(post)\r\n\r\n        dispatch({type: CREATE, payload: data});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.updatePost(id, post)\r\n\r\n        dispatch({type: UPDATE, payload: data});\r\n    } catch (error) {\r\n        // TIP: dont do error.message, just error! because you will lose the message\r\n        // console.log(error.message);\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        // no need to assign variable to the await below since we are not interested with the response\r\n        await api.deletePost(id)\r\n\r\n        dispatch({type: DELETE, payload: id});\r\n    } catch (error) {\r\n        // TIP: dont do error.message, just error! because you will lose the message\r\n        // console.log(error.message);\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.likePost(id)\r\n\r\n        dispatch({type: UPDATE, payload: data});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  actionDiv: {\r\n    textAlign: 'center',\r\n  },\r\n}));","import React from 'react'\r\nimport {Grid, CircularProgress} from '@material-ui/core'\r\nimport { useSelector} from 'react-redux'\r\n\r\nimport Post from './Post/Post'\r\nimport useStyles from './styles'\r\n\r\n\r\nconst Posts = ({setCurrentId}) => {\r\n    const posts = useSelector((state) => state.posts)\r\n    const classes = useStyles();\r\n\r\n    // console.log(posts);\r\n    return (\r\n        !posts.length ? <CircularProgress /> : (\r\n            <Grid className = {classes.container} container alignItems=\"stretch\" spacing={3}>\r\n                {posts.map((post)=> (\r\n                    <Grid key={post.id} item xs={12} sm={6}>\r\n                        {/* below in Post tag, we call this props drilling for setCurrentId */}\r\n                        <Post post={post} setCurrentId={setCurrentId}/>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>   \r\n        )\r\n     );\r\n}\r\n \r\nexport default Posts; ","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));","import React, {useState, useEffect} from 'react';\r\nimport useStyles from './styles'\r\nimport {TextField, Button, Typography, Paper} from '@material-ui/core'\r\nimport Filebase from 'react-file-base64'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {createPost, updatePost} from '../../actions/posts'\r\n\r\nconst Form = ({currentId, setCurrentId}) => {\r\n    const [postData, setPostData] = useState({\r\n        creator: '',\r\n        title:'',\r\n        message:'',\r\n        tags:'',\r\n        selectedFile: ''\r\n    })\r\n\r\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null)\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(post) setPostData(post)\r\n    }, [post]) // this second arg is a dependency array\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); // this is to not get the refresh from the browser\r\n\r\n        if (currentId) {\r\n            dispatch(updatePost(currentId, postData))\r\n             \r\n        } else {\r\n            dispatch(createPost(postData))\r\n            \r\n        }\r\n        clear()\r\n    }\r\n\r\n    const clear = () => {\r\n        setCurrentId(null)\r\n        setPostData({\r\n            creator: '',\r\n            title:'',\r\n            message:'',\r\n            tags:'',\r\n            selectedFile: ''\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}> \r\n            <Typography variant=\"h6\">{currentId ? \"Editing a Memory\" : \"Creating a Memory\"}</Typography>\r\n                {/* with spread operator, you only change creator property with other data persisting */}\r\n                    <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\"  fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value})}/>\r\n                    <TextField name=\"title\" variant=\"outlined\" label=\"Title\"  fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value})}/>\r\n                    <TextField name=\"message\" variant=\"outlined\" label=\"Message\"  fullWidth value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value})}/>\r\n                    <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\"  fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',')})}/>\r\n                <div className={classes.fileInput}>\r\n                    <Filebase type=\"file\" multiple={false} onDone={({base64})=> setPostData({...postData, selectedFile:base64})} />\r\n                </div>\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>\r\n                Submit\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>\r\n                Clear\r\n                </Button>\r\n            </form>\r\n        </Paper>\r\n     );\r\n}\r\n \r\nexport default Form;","export default __webpack_public_path__ + \"static/media/memories.f0feaef1.jpg\";","import {makeStyles} from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n    appBar: {\r\n      borderRadius: 15,\r\n      margin: '30px 0',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    heading: {\r\n      color: 'rgba(0,183,255, 1)',\r\n    },\r\n    image: {\r\n      marginLeft: '15px',\r\n    },\r\n    [theme.breakpoints.down('sm')] : {\r\n      mainContainer: {\r\n        flexDirection: \"column-reverse\" \r\n      }\r\n    }\r\n  }));","import React, {useState, useEffect} from 'react';\r\nimport { Container, AppBar, Typography, Grow, Grid} from '@material-ui/core';\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport {getPosts} from './actions/posts'\r\nimport Posts from './components/Posts/Posts';\r\nimport Form from './components/Form/Form';\r\nimport memories from './images/memories.jpg';\r\nimport useStyles from './styles'\r\n\r\nconst App = () => {\r\n    const [currentId, setCurrentId] = useState(null)\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPosts());\r\n    }, [currentId, dispatch]);\r\n    return (\r\n        <Container maxWidth =\"lg\">\r\n            <AppBar className ={classes.appBar} position=\"static\" color=\"inherit\">\r\n                <Typography className={classes.heading} variant=\"h2\" align=\"center\">\r\n                    Memories\r\n                </Typography>\r\n                <img className={classes.image} src={memories} alt=\"memories\" width=\"130\"height=\"100\"/>\r\n            </AppBar>\r\n            <Grow in>\r\n                <Container>\r\n                    <Grid className={classes.mainContainer} container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>  \r\n                        <Grid item xs ={12} sm = {7}>\r\n                             <Posts setCurrentId={setCurrentId}/>\r\n                        </Grid>\r\n                        <Grid item xs ={12} sm = {4}>\r\n                             <Form currentId ={currentId} setCurrentId={setCurrentId} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </Grow>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport {createStore, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducers from './reducers';\r\n\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\r\n\r\nReactDOM.render(\r\n<Provider store ={store}>\r\n    <App />\r\n</Provider>, \r\ndocument.getElementById('root')\r\n);"],"sourceRoot":""}